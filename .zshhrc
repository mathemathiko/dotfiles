# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="gentoo"
# ZSH_THEME="miloshadzic"
# ZSH_THEME="nebirhos"
ZSH_THEME="nicoulaj"
# ZSH_THEME="powerline"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)


#### basic
source $ZSH/oh-my-zsh.sh
bindkey -v

# fpath=(/usr/local/share/zsh-completions $fpath)
export PATH="$HOME/.rbenv/bin:$PATH"
export RBENV_VERSION=1.9.3-p362
export EDITOR=vim

eval "$(rbenv init -)"

setopt nonomatch

alias diff='git diff | vim -R -'
alias conso='rails console'
alias ls='gls --color=auto'
alias ll='ls -la'
alias mys='mysql -u root -p'

# use commandline-stack with vi keybind
bindkey 'eq' push-line
 
# use hjkl when complist select
zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char

# history-search-end with vi keybind
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# display mode with vi keybind
readuntil () {
  typeset a
  while [ "$a" != "$1" ]
  do
  read -E -k 1 a
  done
}

# if cd, then ls
function chpwd() { ls -F }

#### MacVim
# http://qiita.com/skkzsh@github/items/3ef20fb73e849eca5278
case "`uname`" in
    Darwin)
        if [ -d /Applications/MacVim.app ]; then
            alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
            alias vi='vim'
        fi
        ;;

    *) ;;
esac


#### colors
export TERM="screen-256color"
eval $(gdircolors ~/dircolors-solarized/dircolors.256dark)
if [ -n "$LS_COLORS" ]; then
    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
fi


#### tmux
alias mux='tmux -2'
alias td='tmux detach'
alias ta='tmux attach'

# use tmux at start
# http://d.hatena.ne.jp/tyru/20100828/run_tmux_or_screen_at_shell_startup
is_tmux_running() {
    [ ! -z "$TMUX" ]
}

shell_has_started_interactively() {
    [ ! -z "$PS1" ]
}

resolve_alias() {
    cmd="$1"
    while \
        whence "$cmd" >/dev/null 2>/dev/null \
        && [ "$(whence "$cmd")" != "$cmd" ]
    do
        cmd=$(whence "$cmd")
    done
    echo "$cmd"
}


if ! is_tmux_running && shell_has_started_interactively; then
    for cmd in tmux; do
        if whence $cmd >/dev/null 2>/dev/null; then
            $(resolve_alias "$cmd")
            break
        fi
    done
fi
